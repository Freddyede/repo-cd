name: Cd-build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 20.x ]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: cd server
      - run: npm install
      - run: npm run test

  # Building all application
  build:
    needs: ci
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x] # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Uses Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          cd server
          npm install
          cd ../client
          npm install
      - name: Build NestJS app
        run: |
          cd server
          npm run build
      - name: Build ReactJS app
        run: |
          cd client
          npm run build
  deploy:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [ 20.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: scp Client APP
        uses: c0c1/scp-action@v1.0
        with:
          # Source dir to deploy
          src: "client/dist"
          # SSH address
          host: ${{ secrets.SERVER_HOST }}
          # Remote dir path
          remote: "/var/www/html"
          # SSH Port
          # SSH User name
          user: ${{ secrets.SERVER_USERNAME }}
          # Private key
          key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Copy Caddy config
        uses: c0c1/scp-action@v1.0
        with:
          # Source dir to deploy
          src: "Caddyfile"
          # SSH address
          host: ${{ secrets.SERVER_HOST }}
          # Remote dir path
          remote: "/etc/caddy/Caddyfile"
          # SSH Port
          # SSH User name
          user: ${{ secrets.SERVER_USERNAME }}
          # Private key
          key: ${{ secrets.SERVER_SSH_KEY }}

      - name: ssh pipelines
        uses: cross-the-world/ssh-pipeline@master
        env:
          WELCOME: "ssh pipeline"
        with:
          host: ${{ secrets.SERVER_HOST }}
          user: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          connect_timeout: 10s
          script: |
            service caddy restart